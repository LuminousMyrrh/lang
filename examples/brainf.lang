func rem(num, div) {
    while (num >= div) {
        num -= div;
    }
    return num;
}

func inter(code) {
    var tape = [0];
    for (var i = 0; i < 30000; i+=1) {
        tape[i] = 0;
    }
    var ptr = 0;
    var pc = 0;
    var input_buff = [];

    while (pc < len(code)) {
        var cmd = code[pc];

        if (cmd == ">") {
            ptr += 1;
        } else if (cmd == "<") {
            ptr -= 1;
        } else if (cmd == "+") {
            tape[ptr] = rem((tape[ptr] + 1), 256);
        } else if (cmd == "-") {
            tape[ptr] = rem((tape[ptr] - 1), 256);
        } else if (cmd == ".") {
            print(tape[ptr]);
        } else if (cmd == "[") {
            if (tape[ptr] == 0) {
                var o_b = 1;
                while (o_b > 0) {
                    pc += 1;
                    if (pc >= len(code)) {
                        break;
                    }
                    if (code[pc] == "[") {
                        o_b += 1;
                    } else if (code[pc] == "]") {
                        o_b -= 1;
                    }
                }
            }
        } else if (cmd == "]") {
            if (tape[ptr] != 0) {
                var c_b = 1;
                while (c_b > 0) {
                    pc -= 1;
                    if (pc < 0) {
                        break;
                    }
                    if (code[pc] == "]") {
                        c_b += 1;
                    } else if (code[pc] == "[") {
                        c_b -= 1;
                    }
                }
            }
        }
        pc += 1;
    }
}

func main() {
    inter("++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.");
}

main();
